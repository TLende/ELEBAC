/*
 * CAN.c
 *
 *  Created on: Apr 1, 2025
 *      Author: Thomas
 */
#include "main.h"
#include "CAN.h"

extern FDCAN_HandleTypeDef hfdcan1;

FDCAN_RxHeaderTypeDef RxHeader;
FDCAN_TxHeaderTypeDef TxHeader;

uint8_t TxData[8] = {0xAA, 0xBB, 0xCC, 0xDD, 0x11, 0x22, 0x33, 0x44};
uint8_t RxData[8];

void CAN_ReceiveMessage(void) {
    if (HAL_FDCAN_GetRxMessage(&hfdcan1, FDCAN_RX_FIFO0, &RxHeader, RxData) == HAL_OK) {
    	USART1_Printf("Received CAN Message: ");
        for (int i = 0; i < 8; i++) {
        	USART1_Printf("%02X ", RxData[i]);
        }
        USART1_Printf("\r\n");
    }
}

void CAN_SendMessage(uint16_t ID) {
    // Configure TX Header
    TxHeader.Identifier = 0x100;
    TxHeader.IdType = FDCAN_STANDARD_ID;
    TxHeader.TxFrameType = FDCAN_DATA_FRAME;
    TxHeader.DataLength = FDCAN_DLC_BYTES_8;
    TxHeader.ErrorStateIndicator = FDCAN_ESI_ACTIVE;
    TxHeader.BitRateSwitch = FDCAN_BRS_OFF;
    TxHeader.FDFormat = FDCAN_CLASSIC_CAN;
    TxHeader.TxEventFifoControl = FDCAN_NO_TX_EVENTS;
    TxHeader.MessageMarker = 0;

    // Send Message
    if (HAL_FDCAN_AddMessageToTxFifoQ(&hfdcan1, &TxHeader, TxData) != HAL_OK) {
        Error_Handler();
    }
}
